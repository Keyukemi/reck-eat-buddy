// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum role {
  user
  admin
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime  @default(now())
  favoriteIds    String[]  @db.ObjectId

  accounts Account[]
  recipes  Recipe[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Recipe {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  imageUrl     String
  bookmarked   Boolean  @default(false)
  cookTime     String?
  prepTime     String?
  mealCoverage String
  costEstimate String?
  foodClass    String
  category     String
  instructions String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime @default(now())

  userId       String   @db.ObjectId
  ingredientId String[] @db.ObjectId

  allergyId String[] @db.ObjectId

  ingredients ingredient[] @relation(fields: [ingredientId], references: [id])
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  allergies   allergy[]    @relation(fields: [allergyId], references: [id])
}

model ingredient {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  measurmentQty  String
  measurmentUnit String
  recipeId       String[] @db.ObjectId
  recipe         Recipe[] @relation(fields: [recipeId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  deletedAt      DateTime @default(now())
}

model allergy {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  recipeId  String[] @db.ObjectId
  recipe    Recipe[] @relation(fields: [recipeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime @default(now())
}
